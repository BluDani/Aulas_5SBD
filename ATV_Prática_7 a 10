Parte 1 – Junções e Produto Cartesiano (Seção 7)
1. Usando a sintaxe proprietária da Oracle, exiba o nome de cada cliente junto com o número
de sua conta.
SELECT CLIENTE_NOME, CONTA_NUMERO
FROM CLIENTE
JOIN CONTA ON CLIENTE_COD = CLIENTE_CLIENTE_COD;

2. Mostre todas as combinações possíveis de clientes e agências (produto cartesiano).
SELECT c.CLIENTE_NOME, a.AGENCIA_NOME
 FROM CLIENTE c
 CROSS JOIN AGENCIA a;

3. Usando aliases de tabela, exiba o nome dos clientes e a cidade da agência onde mantêm
conta.
SELECT c.CLIENTE_NOME || ' - ' || a.AGENCIA_CIDADE AS CLIENTE_CIDADE
 FROM CLIENTE c
 JOIN CONTA ct ON c.CLIENTE_COD = ct.CLIENTE_CLIENTE_COD
 INNER JOIN AGENCIA a ON ct.AGENCIA_AGENCIA_COD = a.AGENCIA_COD;


Parte 2 – Funções de Grupo, COUNT, DISTINCT e NVL (Seção 8)
4. Exiba o saldo total de todas as contas cadastradas.
SELECT SUM(SALDO) AS SALDO_TOTAL
FROM CONTA

5. Mostre o maior saldo e a média de saldo entre todas as contas.
SELECT MAX(SALDO) AS MAIOR_SALDO, AVG(saldo) AS MEDIA
FROM CONTA

6. Apresente a quantidade total de contas cadastradas.
SELECT COUNT(CONTA_NUMERO)
FROM CONTA;

7. Liste o número de cidades distintas onde os clientes residem.
SELECT COUNT(DISTINCT CIDADE) AS CIDADE
FROM CLIENTE

8. Exiba o número da conta e o saldo, substituindo valores nulos por zero.
SELECT CONTA_NUMERO, NVL(SALDO, 0) AS SALDO
FROM CONTA


Parte 3 – GROUP BY, HAVING, ROLLUP e Operadores de Conjunto (Seção 9)
9. Exiba a média de saldo por cidade dos clientes.
SELECT CIDADE, ROUND(AVG(C.SALDO), 2) AS MEDIA_SALDO
FROM CLIENTE CL
JOIN CONTA C ON CL.CLIENTE_COD = C.CLIENTE_CLIENTE_COD
GROUP BY CL.CIDADE;

10. Liste apenas as cidades com mais de 3 contas associadas a seus moradores.


11.Utilize a cláusula ROLLUP para exibir o total de saldos por cidade da agência e o total geral.


12. Faça uma consulta com UNION que combine os nomes de cidades dos clientes e das
agências, sem repetições.

